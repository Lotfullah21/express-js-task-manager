const { model } = require("mongoose");
const Task = require("../models/Task");

const getAllTasks = async (req, res) => {
  try {
    // wait till the query strings get executed.
    const tasks = await Task.find({});
    res.status(200).json({ tasks });
  } catch (error) {
    res.status(500).json({ success: false, msg: error });
  }
};

const getTask = async (req, res) => {
  try {
    // id is coming from "/:id" params
    const ID = req.params.id;
    const task = await Task.findOne({ _id: ID });
    if (!task) {
      res.status(404).json({ msg: `task with ${ID} was not found` });
    }
    res.status(200).json(task);
  } catch (error) {
    res.status(500).json({ success: false, msg: error });
  }
};

const createTask = async (req, res) => {
  try {
    const task = await Task.create(req.body);
    res.status(201).json({ task });
  } catch (error) {
    res.status(500).json({ success: false, msg: error });
  }
};

const updateTask = async (req, res) => {
  try {
    const { id: TaskID } = req.params;
    // find the doc with the given id, update it with the req.body data and return the updated one, do validation as well.(null values)
    const task = await Task.findOneAndUpdate({ _id: TaskID }, req.body, {
      new: true,
      runValidators: true,
    });
    if (!task) {
      res.status(404).json({ msg: `document with ${TaskID} does not exist` });
    }
    res.status(200).json(task);
  } catch (error) {
    res.status(500).json({ msg: "er" });
  }
};

const deleteTask = async (req, res) => {
  try {
    const { id: TaskID } = req.params;
    const task = await Task.findOneAndDelete({ _id: TaskID });
    if (!task) {
      res.status(404).json({ msg: `task with ${TaskID} was not found` });
    }
    res.status(200).json({ success: "Task deleted successfully" });
  } catch (error) {
    res.status(500).json({ msg: error });
  }
};

module.exports = { getAllTasks, getTask, createTask, updateTask, deleteTask };
